name: Main

on:
  push:
    branches: [ main, devel ]
  pull_request:
    branches: [ main, devel ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, ubuntu-22.04, ubuntu-24.04 ]
    steps:
      - uses: actions/checkout@v4
      - name: Update submodules
        run: git submodule update --init --recursive
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y libgl1-mesa-dev \
           libglfw3-dev libcairo2-dev libtbb-dev libasio-dev libboost-all-dev \
           libgsl-dev libeigen3-dev libtbb-dev libopencv-dev libyaml-cpp-dev \
           libncurses-dev libevdev-dev libmodbus-dev libpcl-dev libglm-dev
#      - name: Install cyclonedds
#        run: |
#          git clone -b 0.9.1 https://github.com/eclipse-cyclonedds/cyclonedds.git
#           cd cyclonedds && mkdir build && cd build
#           cmake -DBUILD_EXAMPLES=OFF -DBUILD_TESTING=OFF -DENABLE_SHM=NO ..
#           make -j && sudo make install
#      - name: Install iceoryx
#        run: |
#          sudo apt-get install -y libacl1-dev libncurses5-dev pkg-config
#          git clone -b v2.0.3 https://github.com/eclipse-iceoryx/iceoryx.git
#            cd iceoryx
#            cmake -Bbuild -Hiceoryx_meta -DCMAKE_PREFIX_PATH=$(pwd)/build/dependencies/
#            cmake --build build && sudo cmake --build build --target install
      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build
      - name: Configure CMake (ubuntu-22.04, 24.04)
        if: ${{ matrix.os != 'ubuntu-20.04' }}
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
      - name: Configure CMake (ubuntu-20.04)
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DENABLE_VISUALIZATION=OFF
      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

  test:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, ubuntu-22.04, ubuntu-24.04 ]
    steps:
#      - name: Install cyclonedds
#        run: |
#          git clone -b 0.9.1 https://github.com/eclipse-cyclonedds/cyclonedds.git
#          cd cyclonedds && mkdir build && cd build
#          cmake -DBUILD_EXAMPLES=OFF -DBUILD_TESTING=OFF -DENABLE_SHM=NO ..
#          make -j && sudo make install
#      - name: Install iceoryx
#        run: |
#          sudo apt-get install -y libacl1-dev libncurses5-dev pkg-config
#          git clone -b v2.0.3 https://github.com/eclipse-iceoryx/iceoryx.git
#            cd iceoryx
#            cmake -Bbuild -Hiceoryx_meta -DCMAKE_PREFIX_PATH=$(pwd)/build/dependencies/
#            cmake --build build && sudo cmake --build build --target install
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y libgl1-mesa-dev \
           libglfw3-dev libcairo2-dev libtbb-dev libasio-dev libboost-all-dev \
           libgsl-dev libeigen3-dev libtbb-dev libopencv-dev libyaml-cpp-dev \
           libncurses-dev libevdev-dev libmodbus-dev libpcl-dev
      - name: Update submodules
        run: git submodule update --init --recursive
      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build
      - name: Configure CMake (ubuntu-22.04, 24.04)
        if: ${{ matrix.os != 'ubuntu-20.04' }}
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTING=ON
      - name: Configure CMake (ubuntu-20.04)
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTING=ON -DENABLE_VISUALIZATION=OFF
      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE
      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: ctest
